import Resolver from"../resolver.js";import{ResolverOptions,SearchResults,IntermediateSearchResults}from"../type.js";Resolver.prototype.handler=function(a,b){let c=b[0];if(c.then){const c=this;return Promise.all(b).then(function(b){return c[a].apply(c,b)})}if(c[0]&&c[0].index)return this[a].apply(this,c);let d,e,f,g,h,j=[],k=[],l=0,m=0;for(let c,n=0;n<b.length;n++)if(c=b[n],c){let b;if(c.constructor===Resolver)b=c.result;else if(c.constructor===Array)b=c;else{l=c.limit||0,m=c.offset||0,f=c.suggest,e=c.resolve,g=c.highlight&&e,d=g||c.enrich&&e;let a;if(c.index&&(this.index=a=c.index),c.query||c.tag)c.field&&(a=this.index.index.get(c.field)),c.resolve=!1,b=a.search(c).result,c.resolve=e,g&&(h=c.query);else if(c.and)b=this.and(c.and);else if(c.or)b=this.or(c.or);else if(c.xor)b=this.xor(c.xor);else if(c.not)b=this.not(c.not);else continue}if(b.then)k.push(b);else if(b.length)j[n]=b;else if(!f&&("and"===a||"xor"===a)){j=[];break}}return{final:j,promises:k,limit:l,offset:m,enrich:d,resolve:e,suggest:f,highlight:g,highlight_query:h}};