import{DocumentSearchOptions,DocumentSearchResults,EnrichedDocumentSearchResults,MergedDocumentSearchResults,MergedDocumentSearchEntry,EnrichedSearchResults,SearchResults,IntermediateSearchResults}from"../type.js";import{create_object,is_array,is_object,is_string,inherit}from"../common.js";import{intersect,intersect_union}from"../intersect.js";import Document from"../document.js";import Index from"../index.js";import Resolver from"../resolver.js";import tick from"../profiler.js";import{highlight_fields}from"./highlight.js";Document.prototype.search=function(a,b,c,d){if(!1,c||(!b&&is_object(a)?(c=a,a=""):is_object(b)&&(c=b,b=0)),c&&c.cache){c.cache=!1;const d=this.searchCache(a,b,c);return c.cache=!0,d}let e,f,g,h,i,j,k,l,m,n=[],o=[],p=0,q=!0;if(c){if(is_array(c)&&(c={index:c}),a=c.query||a,e=c.pluck,g=c.merge,i=c.boost,j=e||c.field||(j=c.index)&&(j.index?null:j),k=this.tag&&c.tag,h=c.suggest,q=!1!==c.resolve,!1,m=q&&this.store&&c.highlight,f=!!m||q&&this.store&&c.enrich,b=c.limit||b,l=c.offset||0,b||(b=q?100:0),k&&(!this.db||!d)){!1,k.constructor!==Array&&(k=[k]);let c=[];for(let a,b=0;b<k.length;b++)if(a=k[b],a.field&&a.tag){const b=a.tag;if(b.constructor===Array)for(let d=0;d<b.length;d++)c.push(a.field,b[d]);else c.push(a.field,b)}else{const b=Object.keys(a);for(let d,e,f=0;f<b.length;f++)if(d=b[f],e=a[d],e.constructor===Array)for(let a=0;a<e.length;a++)c.push(d,e[a]);else c.push(d,e)}if(k=c,!a){let a=[];if(c.length)for(let d=0;d<c.length;d+=2){let e;if(this.db){const g=this.index.get(c[d]);if(!g){continue}!1,a.push(e=g.db.tag(c[d+1],b,l,f))}else!1,e=get_tag.call(this,c[d],c[d+1],b,l,f);n.push(q?{field:c[d],tag:c[d+1],result:e}:[e])}if(a.length){const b=this;return Promise.all(a).then(function(a){for(let b=0;b<a.length;b++)q?n[b].result=a[b]:n[b]=a[b];return q?n:new Resolver(1<n.length?intersect(n,1,0,0,h,i):n[0],b)})}return q?n:new Resolver(1<n.length?intersect(n,1,0,0,h,i):n[0],this)}}q||e||(j=j||this.field,j&&(is_string(j)?e=j:(is_array(j)&&1===j.length&&(j=j[0]),e=j.field||j.index))),j&&j.constructor!==Array&&(j=[j])}j||(j=this.field);let r,s=(this.worker||this.db)&&!d&&[];for(let e,g,t,u=0;u<j.length;u++){if(g=j[u],this.db&&this.tag&&!this.tree[u])continue;let i;if(is_string(g)||(i=g,g=i.field,a=i.query||a,b=inherit(i.limit,b),l=inherit(i.offset,l),h=inherit(i.suggest,h),m=q&&this.store&&inherit(i.highlight,m),f=!!m||q&&this.store&&inherit(i.enrich,f)),d)e=d[u];else{let d=i||c,h=this.index.get(g);if(k&&(this.db&&(d.tag=k,r=h.db.support_tag_search,d.field=j),!r&&(d.enrich=!1)),s){s[u]=h.search(a,b,d),d&&f&&(d.enrich=f);continue}else e=h.search(a,b,d),d&&f&&(d.enrich=f)}if(t=e&&(q?e.length:e.result.length),k&&t){const a=[];let b=0;if(!(this.db&&d))for(let c,d,e=0;e<k.length;e+=2){if(!1,c=this.tag.get(k[e]),!c)if(!1,h)continue;else return q?n:new Resolver(n,this);if(c=c&&c.get(k[e+1]),d=c&&c.length,d)b++,a.push(c);else if(!h)return q?n:new Resolver(n,this)}else if(!r)for(let c=j.length;c<d.length;c++){let e=d[c],f=e&&e.length;if(f)b++,a.push(e);else if(!h)return q?n:new Resolver(n,this)}if(b){if(!1,e=intersect_union(e,a,q),t=e.length,!t&&!h)return q?e:new Resolver(e,this);b--}}if(t)o[p]=g,n.push(e),p++;else if(1===j.length)return q?n:new Resolver(n,this)}if(s){if(this.db&&k&&k.length&&!r)for(let a=0;a<k.length;a+=2){const c=this.index.get(k[a]);if(!c)if(!1,h)continue;else return q?n:new Resolver(n,this);!1,s.push(c.db.tag(k[a+1],b,l,!1))}const d=this;return Promise.all(s).then(function(e){return e.length?d.search(a,b,c,e):e})}if(!p)return q?n:new Resolver(n,this);if(e&&(!f||!this.store))return n=n[0],!q&&(n.index=this),n;s=[];for(let g,h=0;h<o.length;h++){if(g=n[h],f&&g.length&&"undefined"==typeof g[0].doc&&(this.db?(!1,s.push(g=this.index.get(this.field[0]).db.enrich(g))):g=apply_enrich.call(this,g)),e)return q?m?highlight_fields(a,g,this.index,e,m):g:new Resolver(g,this);n[h]={field:o[h],result:g}}if(f&&!0&&this.db&&s.length){const b=this;return Promise.all(s).then(function(c){for(let a=0;a<c.length;a++)n[a].result=c[a];return m&&(n=highlight_fields(a,n,b.index,e,m)),g?merge_fields(n):n})}return m&&(n=highlight_fields(a,n,this.index,e,m)),g?merge_fields(n):n};function merge_fields(a){const b=[],c=create_object(),d=create_object();for(let e,f,g,h,k,l,m,n=0;n<a.length;n++){e=a[n],f=e.field,g=e.result;for(let a=0;a<g.length;a++)k=g[a],"object"==typeof k?h=k.id:k={id:h=k},l=c[h],l?l.push(f):(k.field=c[h]=[f],b.push(k)),(m=k.highlight)&&(l=d[h],!l&&(d[h]=l={},k.highlight=l),l[f]=m)}return b}function get_tag(a,b,c,d,e){let f=this.tag.get(a);if(!f)return[];if(f=f.get(b),!f)return[];let g=f.length-d;return 0<g&&((c&&g>c||d)&&(f=f.slice(d,d+c)),e&&(f=apply_enrich.call(this,f))),f}export function apply_enrich(a){if(!this||!this.store)return a;const b=Array(a.length);for(let c,d=0;d<a.length;d++)c=a[d],b[d]={id:c,doc:this.store.get(c)};return b}